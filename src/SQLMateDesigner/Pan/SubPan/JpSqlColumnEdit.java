/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SQLMateDesigner.Pan.SubPan;

import com.soft9000.SQLMate.EColumnType;
import com.soft9000.SQLMate.SqlColumn;

/**
 *
 * @author profnagy
 */
public class JpSqlColumnEdit extends javax.swing.JPanel {

    /**
     * Creates new form JpColumnEditor
     */
    public JpSqlColumnEdit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlstSQLType = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfFieldName = new javax.swing.JTextField();
        jckNulls = new javax.swing.JCheckBox();
        jckPrimaryKey = new javax.swing.JCheckBox();

        jlstSQLType.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Integer", "Text", "Real", "Blob" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jlstSQLType);

        jLabel1.setText("SQL Type");

        jLabel2.setText("Field Name: ");

        jckNulls.setText("Allow NULL");
        jckNulls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jckNullsActionPerformed(evt);
            }
        });

        jckPrimaryKey.setText("Primary Key");
        jckPrimaryKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jckPrimaryKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfFieldName)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jckNulls)
                                            .addComponent(jckPrimaryKey))))
                                .addGap(0, 74, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jckPrimaryKey)
                        .addGap(32, 32, 32)
                        .addComponent(jckNulls)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jckNullsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jckNullsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jckNullsActionPerformed

    private void jckPrimaryKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jckPrimaryKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jckPrimaryKeyActionPerformed

    public boolean set(final SqlColumn ref) {
        if (ref == null) {
            return false;
        }
        this.jtfFieldName.setText(ref.getColumnName());
        //this.jtbDefaultValue.setText(ref.set);
        EColumnType zType = ref.getSqlType();
        switch (zType) {
            case Integer:
            case Text:
            case Real:
            case Blob:
                this.jlstSQLType.setSelectedValue(zType.name(), true);
                break;
            default:
                return false;
        }
        return true;
    }

    public SqlColumn get() {
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jckNulls;
    private javax.swing.JCheckBox jckPrimaryKey;
    private javax.swing.JList jlstSQLType;
    private javax.swing.JTextField jtfFieldName;
    // End of variables declaration//GEN-END:variables
}
